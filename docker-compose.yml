services:
  data_warehouse:
    image: postgres:17.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "data_warehouse"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

  airflow_db:
    image: postgres:17.4
    environment:
      POSTGRES_DB: "airflow_db"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
      MINIO_CONSOLE_PORT: "9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  metabase:
    build: ./metabase
    container_name: metabase_capstone
    ports:
      - "3000:3000"
    volumes:
      - ./data/duckdb/motorcycle_capstone.duckdb:/duckdb/motorcycle_capstone.duckdb
    depends_on:
      - airflow

  airflow:
    image: apache/airflow:3.0.0-python3.12
    entrypoint: /bin/bash
    command:
      - -c
      - |
        pip install -r /opt/airflow/requirements.txt
        airflow db migrate
        airflow users create \
          --username "${AIRFLOW_USERNAME}" \
          --password "${AIRFLOW_PASSWORD}" \
          --firstname admin \
          --lastname admin \
          --role Admin \
          --email admin
        airflow scheduler &
        airflow dag-processor &
        airflow triggerer &
        airflow api-server --port 8080
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - data_warehouse
      - airflow_db
      - minio
    env_file:
      - .env
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@airflow_db/airflow_db"
      AIRFLOW_CONN_DATA_WAREHOUSE_CONNECTION: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@data_warehouse:5432/data_warehouse"
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__AUTH_MANAGER: "airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager"
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      MINIO_ENDPOINT: "${MINIO_ENDPOINT}"
      MINIO_ACCESS_KEY: "${MINIO_ROOT_USER}"
      MINIO_SECRET_KEY: "${MINIO_ROOT_PASSWORD}"
      MINIO_BUCKET_NAME: "${MINIO_BUCKET_NAME}"
      API_BASE_URL: "${API_BASE_URL}"
      API_FARS_DATA_BY_YEAR: "${API_FARS_DATA_BY_YEAR}"
      SCRAPING_USER_AGENT: "${SCRAPING_USER_AGENT}"
      SCRAPING_TIMEOUT: "${SCRAPING_TIMEOUT}"
      HELMET_LAWS_URL: "${HELMET_LAWS_URL}"
    volumes:
      - ./airflow/airflow_dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./requirements.txt:/opt/airflow/requirements.txt

volumes:
  minio_data: